apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  service.webhook.slack: |
    #url: https://hooks.slack.com/services/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
    #joe-slack
    url: https://hooks.slack.com/services/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
    headers:
      - name: Content-Type
        value: application/json
  
  template.joe-slack: |
    webhook:
      slack:
        method: POST
        body: |
          {
            "attachments": [{
              "title": "{{.app.metadata.name}}",
              "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#18be52",
              "fields": [{
                "title": "Sync Status: {{.app.status.sync.status}}",
                "value": "Time: {{.app.status.operationState.startedAt}}",
                "short": true
              }, {
                "title": "Repository",
                "value": "{{.app.spec.source.repoURL}}",
                "short": true
              }]
            }]
          }
  trigger.on-deployed: |
    - description: Application is synced and healthy. Triggered once per commit.
      oncePer: app.status.sync.revision
      send: [joe-slack]  # template names
      # trigger condition
      when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
  trigger.on-sync-running: |
    - description: Application is being synced
      send: [joe-slack]  # template names
      when: app.status.operationState.phase in ['Running']
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      send: [joe-slack]  # template names
      when: app.status.operationState.phase in ['Error', 'Failed']
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      send: [joe-slack]  # template names
      when: app.status.operationState.phase in ['Succeeded']
  trigger.on-sync-degraded: |
    - description: Application Out of sync
      send: [joe-slack]
      # when: app.status.operationState.phase in ['OutOfSync']
      when: app.status.sync.status == 'OutOfSync'
  trigger.on-health-degraded: |
    - description: Application has degraded
      send: [joe-slack]
      when: app.status.health.status == 'Degraded'
  trigger.on-health-progressing: |
    - when: app.status.operationState.phase in ['Progressing']
      send: [joe-slack]
  subscriptions: |
    - recipients: [slack]
      triggers: [on-sync-failed, on-health-degraded, on-sync-succeeded, on-sync-degraded]
